/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from protobuf

package org.apache.drill.exec.store.parquet.proto;


public final class SchemaMetadata
{

    public static final class MetadataHeader
    {
        public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataHeader.MessageSchema WRITE =
            new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataHeader.MessageSchema();
        public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataHeader.BuilderSchema MERGE =
            new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataHeader.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader message) throws java.io.IOException
            {
                if(message.hasMetadataVersion())
                    output.writeString(1, message.getMetadataVersion(), false);
                for(String directories : message.getDirectoriesList())
                    output.writeString(4, directories, true);
            }
            public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataHeader.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataHeader.getFieldNumber(name);
            }
            public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader> typeClass()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.class;
            }
            public java.lang.String messageName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader message) throws java.io.IOException {}
            public org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setMetadataVersion(input.readString());
                            break;
                        case 4:
                            builder.addDirectories(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.Builder newMessage()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataHeader.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataHeader.getFieldNumber(name);
            }
            public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.Builder> typeClass()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataHeader.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "metadataVersion";
                case 4: return "directories";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("metadataVersion", 1);
            fieldMap.put("directories", 4);
        }
    }

    public static final class ParquetFileMetadata
    {

        public static final class RowGroup
        {

            public static final class HostAffinity
            {
                public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.HostAffinity.MessageSchema WRITE =
                    new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.HostAffinity.MessageSchema();
                public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.HostAffinity.BuilderSchema MERGE =
                    new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.HostAffinity.BuilderSchema();
                
                public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity>
                {
                    public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity message) throws java.io.IOException
                    {
                        if(message.hasKey())
                            output.writeString(1, message.getKey(), false);
                        if(message.hasValue())
                            output.writeFloat(2, message.getValue(), false);
                    }
                    public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity message)
                    {
                        return message.isInitialized();
                    }
                    public java.lang.String getFieldName(int number)
                    {
                        return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.HostAffinity.getFieldName(number);
                    }
                    public int getFieldNumber(java.lang.String name)
                    {
                        return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.HostAffinity.getFieldNumber(name);
                    }
                    public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity> typeClass()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.class;
                    }
                    public java.lang.String messageName()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.class.getSimpleName();
                    }
                    public java.lang.String messageFullName()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.class.getName();
                    }
                    //unused
                    public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity message) throws java.io.IOException {}
                    public org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity newMessage() { return null; }
                }
                public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.Builder>
                {
                    public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.Builder builder) throws java.io.IOException
                    {
                        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                        {
                            switch(number)
                            {
                                case 0:
                                    return;
                                case 1:
                                    builder.setKey(input.readString());
                                    break;
                                case 2:
                                    builder.setValue(input.readFloat());
                                    break;
                                default:
                                    input.handleUnknownField(number, this);
                            }
                        }
                    }
                    public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.Builder builder)
                    {
                        return builder.isInitialized();
                    }
                    public org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.Builder newMessage()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.newBuilder();
                    }
                    public java.lang.String getFieldName(int number)
                    {
                        return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.HostAffinity.getFieldName(number);
                    }
                    public int getFieldNumber(java.lang.String name)
                    {
                        return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.HostAffinity.getFieldNumber(name);
                    }
                    public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.Builder> typeClass()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.Builder.class;
                    }
                    public java.lang.String messageName()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.class.getSimpleName();
                    }
                    public java.lang.String messageFullName()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.class.getName();
                    }
                    //unused
                    public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.Builder builder) throws java.io.IOException {}
                }
                public static java.lang.String getFieldName(int number)
                {
                    switch(number)
                    {
                        case 1: return "key";
                        case 2: return "value";
                        default: return null;
                    }
                }
                public static int getFieldNumber(java.lang.String name)
                {
                    java.lang.Integer number = fieldMap.get(name);
                    return number == null ? 0 : number.intValue();
                }
                private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
                static
                {
                    fieldMap.put("key", 1);
                    fieldMap.put("value", 2);
                }
            }

            public static final class ColumnMetadata
            {
                public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.ColumnMetadata.MessageSchema WRITE =
                    new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.ColumnMetadata.MessageSchema();
                public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.ColumnMetadata.BuilderSchema MERGE =
                    new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.ColumnMetadata.BuilderSchema();
                
                public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata>
                {
                    public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata message) throws java.io.IOException
                    {
                        if(message.hasName())
                            output.writeUInt32(1, message.getName(), false);
                        if(message.hasNulls())
                            output.writeUInt64(2, message.getNulls(), false);
                        if(message.hasVint64())
                            output.writeSInt64(3, message.getVint64(), false);
                        if(message.hasVint32())
                            output.writeSInt32(4, message.getVint32(), false);
                        if(message.hasVbool())
                            output.writeBool(5, message.getVbool(), false);
                        if(message.hasVbinary())
                            output.writeByteArray(6, message.getVbinary().toByteArray(), false);

                        if(message.hasVfloat())
                            output.writeFloat(7, message.getVfloat(), false);
                        if(message.hasVdouble())
                            output.writeDouble(8, message.getVdouble(), false);
                    }
                    public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata message)
                    {
                        return message.isInitialized();
                    }
                    public java.lang.String getFieldName(int number)
                    {
                        return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.ColumnMetadata.getFieldName(number);
                    }
                    public int getFieldNumber(java.lang.String name)
                    {
                        return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.ColumnMetadata.getFieldNumber(name);
                    }
                    public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata> typeClass()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.class;
                    }
                    public java.lang.String messageName()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.class.getSimpleName();
                    }
                    public java.lang.String messageFullName()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.class.getName();
                    }
                    //unused
                    public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata message) throws java.io.IOException {}
                    public org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata newMessage() { return null; }
                }
                public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.Builder>
                {
                    public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.Builder builder) throws java.io.IOException
                    {
                        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                        {
                            switch(number)
                            {
                                case 0:
                                    return;
                                case 1:
                                    builder.setName(input.readUInt32());
                                    break;
                                case 2:
                                    builder.setNulls(input.readUInt64());
                                    break;
                                case 3:
                                    builder.setVint64(input.readSInt64());
                                    break;
                                case 4:
                                    builder.setVint32(input.readSInt32());
                                    break;
                                case 5:
                                    builder.setVbool(input.readBool());
                                    break;
                                case 6:
                                    builder.setVbinary(com.google.protobuf.ByteString.copyFrom(input.readByteArray()));
                                    break;
                                case 7:
                                    builder.setVfloat(input.readFloat());
                                    break;
                                case 8:
                                    builder.setVdouble(input.readDouble());
                                    break;
                                default:
                                    input.handleUnknownField(number, this);
                            }
                        }
                    }
                    public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.Builder builder)
                    {
                        return builder.isInitialized();
                    }
                    public org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.Builder newMessage()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.newBuilder();
                    }
                    public java.lang.String getFieldName(int number)
                    {
                        return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.ColumnMetadata.getFieldName(number);
                    }
                    public int getFieldNumber(java.lang.String name)
                    {
                        return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.ColumnMetadata.getFieldNumber(name);
                    }
                    public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.Builder> typeClass()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.Builder.class;
                    }
                    public java.lang.String messageName()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.class.getSimpleName();
                    }
                    public java.lang.String messageFullName()
                    {
                        return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.class.getName();
                    }
                    //unused
                    public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.Builder builder) throws java.io.IOException {}
                }
                public static java.lang.String getFieldName(int number)
                {
                    switch(number)
                    {
                        case 1: return "name";
                        case 2: return "nulls";
                        case 3: return "vint64";
                        case 4: return "vint32";
                        case 5: return "vbool";
                        case 6: return "vbinary";
                        case 7: return "vfloat";
                        case 8: return "vdouble";
                        default: return null;
                    }
                }
                public static int getFieldNumber(java.lang.String name)
                {
                    java.lang.Integer number = fieldMap.get(name);
                    return number == null ? 0 : number.intValue();
                }
                private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
                static
                {
                    fieldMap.put("name", 1);
                    fieldMap.put("nulls", 2);
                    fieldMap.put("vint64", 3);
                    fieldMap.put("vint32", 4);
                    fieldMap.put("vbool", 5);
                    fieldMap.put("vbinary", 6);
                    fieldMap.put("vfloat", 7);
                    fieldMap.put("vdouble", 8);
                }
            }

            public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.MessageSchema WRITE =
                new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.MessageSchema();
            public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.BuilderSchema MERGE =
                new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.BuilderSchema();
            
            public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup>
            {
                public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup message) throws java.io.IOException
                {
                    if(message.hasStart())
                        output.writeUInt64(1, message.getStart(), false);
                    if(message.hasLength())
                        output.writeUInt64(2, message.getLength(), false);
                    if(message.hasRowCount())
                        output.writeUInt64(3, message.getRowCount(), false);
                    for(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity affinities : message.getAffinitiesList())
                        output.writeObject(4, affinities, org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.HostAffinity.WRITE, true);

                    for(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata columns : message.getColumnsList())
                        output.writeObject(5, columns, org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.ColumnMetadata.WRITE, true);

                }
                public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup message)
                {
                    return message.isInitialized();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.getFieldNumber(name);
                }
                public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup> typeClass()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.class;
                }
                public java.lang.String messageName()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.class.getName();
                }
                //unused
                public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup message) throws java.io.IOException {}
                public org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup newMessage() { return null; }
            }
            public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.Builder>
            {
                public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.Builder builder) throws java.io.IOException
                {
                    for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                    {
                        switch(number)
                        {
                            case 0:
                                return;
                            case 1:
                                builder.setStart(input.readUInt64());
                                break;
                            case 2:
                                builder.setLength(input.readUInt64());
                                break;
                            case 3:
                                builder.setRowCount(input.readUInt64());
                                break;
                            case 4:
                                builder.addAffinities(input.mergeObject(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.HostAffinity.newBuilder(), org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.HostAffinity.MERGE));

                                break;
                            case 5:
                                builder.addColumns(input.mergeObject(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.ColumnMetadata.newBuilder(), org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.ColumnMetadata.MERGE));

                                break;
                            default:
                                input.handleUnknownField(number, this);
                        }
                    }
                }
                public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.Builder builder)
                {
                    return builder.isInitialized();
                }
                public org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.Builder newMessage()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.newBuilder();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.getFieldNumber(name);
                }
                public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.Builder> typeClass()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.Builder.class;
                }
                public java.lang.String messageName()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.class.getName();
                }
                //unused
                public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.Builder builder) throws java.io.IOException {}
            }
            public static java.lang.String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "start";
                    case 2: return "length";
                    case 3: return "rowCount";
                    case 4: return "affinities";
                    case 5: return "columns";
                    default: return null;
                }
            }
            public static int getFieldNumber(java.lang.String name)
            {
                java.lang.Integer number = fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }
            private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
            static
            {
                fieldMap.put("start", 1);
                fieldMap.put("length", 2);
                fieldMap.put("rowCount", 3);
                fieldMap.put("affinities", 4);
                fieldMap.put("columns", 5);
            }
        }

        public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.MessageSchema WRITE =
            new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.MessageSchema();
        public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.BuilderSchema MERGE =
            new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata message) throws java.io.IOException
            {
                if(message.hasPath())
                    output.writeString(1, message.getPath(), false);
                if(message.hasLength())
                    output.writeUInt64(2, message.getLength(), false);
                for(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup rowGroups : message.getRowGroupsList())
                    output.writeObject(3, rowGroups, org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.WRITE, true);

            }
            public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.getFieldNumber(name);
            }
            public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata> typeClass()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.class;
            }
            public java.lang.String messageName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata message) throws java.io.IOException {}
            public org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setPath(input.readString());
                            break;
                        case 2:
                            builder.setLength(input.readUInt64());
                            break;
                        case 3:
                            builder.addRowGroups(input.mergeObject(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.RowGroup.newBuilder(), org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.RowGroup.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.Builder newMessage()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.ParquetFileMetadata.getFieldNumber(name);
            }
            public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.Builder> typeClass()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.ParquetFileMetadata.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "path";
                case 2: return "length";
                case 3: return "rowGroups";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("path", 1);
            fieldMap.put("length", 2);
            fieldMap.put("rowGroups", 3);
        }
    }

    public static final class MetadataColumns
    {

        public static final class ColumnTypeInfo
        {
            public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.ColumnTypeInfo.MessageSchema WRITE =
                new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.ColumnTypeInfo.MessageSchema();
            public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.ColumnTypeInfo.BuilderSchema MERGE =
                new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.ColumnTypeInfo.BuilderSchema();
            
            public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo>
            {
                public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo message) throws java.io.IOException
                {
                    if(message.hasName())
                        output.writeString(1, message.getName(), false);
                    if(message.hasPrimitiveType())
                        output.writeEnum(2, message.getPrimitiveType().getNumber(), false);
                    if(message.hasOriginalType())
                        output.writeEnum(3, message.getOriginalType().getNumber(), false);
                }
                public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo message)
                {
                    return message.isInitialized();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.ColumnTypeInfo.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.ColumnTypeInfo.getFieldNumber(name);
                }
                public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo> typeClass()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.class;
                }
                public java.lang.String messageName()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.class.getName();
                }
                //unused
                public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo message) throws java.io.IOException {}
                public org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo newMessage() { return null; }
            }
            public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.Builder>
            {
                public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.Builder builder) throws java.io.IOException
                {
                    for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                    {
                        switch(number)
                        {
                            case 0:
                                return;
                            case 1:
                                builder.setName(input.readString());
                                break;
                            case 2:
                                builder.setPrimitiveType(org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.PrimitiveTypeName.valueOf(input.readEnum()));
                                break;
                            case 3:
                                builder.setOriginalType(org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.OriginalType.valueOf(input.readEnum()));
                                break;
                            default:
                                input.handleUnknownField(number, this);
                        }
                    }
                }
                public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.Builder builder)
                {
                    return builder.isInitialized();
                }
                public org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.Builder newMessage()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.newBuilder();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.ColumnTypeInfo.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.ColumnTypeInfo.getFieldNumber(name);
                }
                public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.Builder> typeClass()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.Builder.class;
                }
                public java.lang.String messageName()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.class.getName();
                }
                //unused
                public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.Builder builder) throws java.io.IOException {}
            }
            public static java.lang.String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "name";
                    case 2: return "primitiveType";
                    case 3: return "originalType";
                    default: return null;
                }
            }
            public static int getFieldNumber(java.lang.String name)
            {
                java.lang.Integer number = fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }
            private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
            static
            {
                fieldMap.put("name", 1);
                fieldMap.put("primitiveType", 2);
                fieldMap.put("originalType", 3);
            }
        }

        public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.MessageSchema WRITE =
            new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.MessageSchema();
        public static final org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.BuilderSchema MERGE =
            new org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns message) throws java.io.IOException
            {
                for(org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo columns : message.getColumnsList())
                    output.writeObject(2, columns, org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.ColumnTypeInfo.WRITE, true);

            }
            public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.getFieldNumber(name);
            }
            public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns> typeClass()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.class;
            }
            public java.lang.String messageName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns message) throws java.io.IOException {}
            public org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 2:
                            builder.addColumns(input.mergeObject(org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.ColumnTypeInfo.newBuilder(), org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.ColumnTypeInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.Builder newMessage()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.apache.drill.exec.store.parquet.proto.SchemaMetadata.MetadataColumns.getFieldNumber(name);
            }
            public java.lang.Class<org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.Builder> typeClass()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, org.apache.drill.exec.store.parquet.proto.Metadata.MetadataColumns.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 2: return "columns";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("columns", 2);
        }
    }

}
